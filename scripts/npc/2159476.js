/*
 *Author - Troxied
 *Function - PP Exchange/Ep/Dp/Sandbox aio npc.
 ***/

importPackage(java.util); 
importPackage(Packages.client); 
importPackage(Packages.server); 

var status = 0;

var pagemax = 15;

var equipnames = new Array("Eye Accessories", "Face Accessories", "Ear Accessories",
    "Caps", "Capes", "Tops", "Gloves", "Overalls", "Pants", "Rings & Effects", "Shoes", "Weapons & Shields");

var eye = new Array(1022108,1022109,1022110,1022111,1022112,1022113,1022114,1022115,1022121,1022132,1022134,1022116,1022117,1022118,1022120,1022984,1022985,1022986,1022987,1022988,1022989,1022990,1022991,1022992,1022993,1022994,1022995,1022996,1022997,1022998,1022999, 1022048, 1022065);
var face = new Array(1012302,1012165,1012176, 1012179, 1012044, 1012281, 1012084, 1012164, 1012208, 1012106, 1012044);
var ear = new Array(1032045,1032132,1032131,1032074,1032121,1032122,1032109,1032110,1032111,1032105,1032104,1032103,1032102,1032101,1032100,1032095, 1032096, 1032097, 1032098, 1032099, 1032087,1032089,1032090,1032091,1032086,1032085,1032084,1032083,1002923,1032082,1032081,1032080,1032079,1032078,1032077,1032076,1032075,1032066,1032065,1032068,1032069,1032058,1032046, 1032048);
var caps = new Array(1002450, 1002310, 1003083, 1003414,1003409,1003408,1003222,1003223,1003359,1003224,1003225,1003231,1003232,1003233,1003108,1003093,1003116,
1003117,1003118,1003119,1003120,1003121,1003122,1003123,1003139,1003125,1002923,1002923,1003126,1003127,1003359,1003128,1003129,1003130,
1003131,1003132,1003133,1003134,1003135,1003136,1003137,1003138,1003146,1003147,1003148,1003149,1003162,1003163,1003164,1003165,1003042,
1003041,1003040,1002964,1002965,1002966,1002967,1002918,1002935,1002936,1002947,1002901,1002900,1002902,1002901,1002999,1002997,1002996,
1002995,1002880,1002881,1002882,1002883,1002884,1002885,1002886,1002801,1002800,1002737,1002743,1002751,1002728,1002725,1002744,1002707,
1003422,1003417,1003418,1003419,1003420,1003421,1003390,1003387,1003386,1003385,1003384,1003383,1003382,1003381,1003380,1003375,1003376,
1003404,1003216,1003192,1003193,1003194,1003195,1003197,1003214,1003215,1003186,1003187,1003169,1003170,1003171,1003172,1003173,1003174,
1003175,1003176,1003177,1003178,1003202,1003203,1003204,1003205,1003206,1003207,1003208,1003210,1003141,1003092, 1003077, 1003078, 1003079, 
1003080, 1003081, 1003082,1003043,1003029,1003030,1003031,1003032,1003033,1003034,1003035,1003036,1001072,1001055,1001075,1003037,1002945,
1003038,1003053,1003054,1002957,1002912,1002878,1002824,1001065,1001069,1001068,1002225,1002369,1002368,1003520,1003521,1003522,1003523,
1003524,1003525,1003526,1003527,1003528,1003529,1003530,1003531,1003532,1003514,1003513,1003512,1003511,1003502,1003501,1003500,1003454,
1003456,1003450,1003439,1003437,1003434,1003427,1003426,1003425,1003400,1003402,1003401,1003403,1003404,1003399,1003398,1003393,1003392,
1003391,1003359,1003351,1003352,1003353,1003354,1003355,1003356,1003357,1003358,1003350,1001046,1003000,1002930,1002450,1003482,1003483,
1003484,1003485,1003486,1003487,1003491,1003459,1003460,1003479,1002982,1003375,1002893,1002889,1002892,1002842,1002843,1003268,1003269,1003249,1003250,1003251,1003252,1003253,1003254,1003255,1003256,1003264,1003265, 1002436, 1003096, 1003196, 1003238, 1003363, 1004026, 1003965, 1003367, 1002506, 1003159, 1003219, 1003865, 1003822, 1003366, 1000030, 1000031, 1000032, 1000033, 1000034, 1000035, 1000036, 1000037, 1000040, 1000044, 1000045, 1000055, 1000060, 1000061, 1000073, 1000074, 1000075, 1000086, 1000087, 1000097, 1000098, 1003071, 1000100, 1001045, 1001046, 1001047, 1001050, 1001053, 1001054, 1001055, 1001056, 1001060, 1001062, 1001064, 1001065, 1001066, 1001067, 1001068, 1001069, 1001070, 1001071, 1001075, 1001076, 1001083, 1001084, 1001085, 1001087, 1001088, 1001089, 1001090, 1001091, 1001092, 1001093, 1001094, 1001095, 1001097, 1001098, 1001099, 1001100, 1002450, 1002535, 1002536, 1002711, 1002712, 1002723, 1002735, 1002736, 1002737, 1002772, 1002773, 1002775, 1002776, 1002777, 1002778, 1002779, 1002780, 1002781, 1002782, 1002783, 1002797, 1002798, 1002832, 1002833, 1002825, 1002826, 1002827, 1002828, 1002829, 1002838, 1002839, 1002840, 1002841, 1002842, 1002843, 1002844, 1002845, 1002846, 1002848, 1002882, 1002883, 1002884, 1002888, 1002889, 1002892, 1002893, 1002894, 1002895, 1002896, 1002897, 1002898, 1002899, 1002900, 1002901, 1002902, 1002903, 1002915, 1002916, 1002917, 1002931, 1002936, 1002945, 1002947, 1002948, 1002949, 1002967, 1002973, 1002975, 1002983, 1002984, 1002985, 1002986, 1002987, 1002989, 1002998, 1002999, 1003010, 1003080, 1003081, 1003082, 1003083, 1003084, 1003122, 1003123, 1003125, 1003126, 1003127, 1003128, 1003129, 1003130, 1003131, 1003132, 1003133, 1003134, 1003136, 1003146, 1003147, 1003148, 1003149, 1003170, 1003171, 1003172, 1003173, 1003174, 1003175, 1003176, 1003185, 1003186, 1003187, 1003194, 1003204, 1003207, 1003208, 1003210, 1003214, 1003215, 1003216, 1003217, 1003218, 1003219, 1003220, 1003221, 1003222, 1003223, 1003231, 1003232, 1003233, 1003234, 1003235, 1003237, 1003238, 1003239, 1003240, 1003241, 1003246, 1003247, 1003249, 1003250, 1003251, 1003252, 1003253, 1003254, 1003255, 1003256, 1003257, 1003258, 1003259, 1003260, 1003261, 1003262, 1003264, 1003265, 1003268, 1003269, 1003271, 1003272, 1003273, 1003276, 1003277, 1003278, 1003346, 1003347, 1003348, 1003352, 1003353, 1003354, 1003355, 1003356, 1003357, 1003358, 1003359, 1003360, 1003362, 1003365, 1003366, 1003367, 1003375, 1003376, 1003377, 1003379, 1003380, 1003381, 1003382, 1003383, 1003384, 1003385, 1003386, 1003387, 1003389, 1003390, 1003392, 1003398, 1003399, 1003400, 1003401, 1003402, 1003403, 1003404, 1003405, 1003408, 1003409, 1003414, 1003415, 1003416, 1003417, 1003418, 1003419, 1003420, 1003421, 1003422, 1003425, 1003426, 1003427, 1003434, 1003436, 1003437, 1003438, 1003440, 1003441, 1003442, 1003456, 1003457, 1003458, 1003459, 1003460, 1003461, 1003462, 1003463, 1003464, 1003465, 1003466, 1003467, 1003468, 1003469, 1003470, 1003471, 1003472, 1003473, 1003474, 1003475, 1003476, 1003477, 1003478, 1003488, 1003489, 1003492, 1003493, 1003494, 1003495, 1003496, 1003500, 1003501, 1003502, 1003503, 1003504, 1003505, 1003506, 1003507, 1003509, 1003510, 1003517, 1003518, 1003519, 1003520, 1003521, 1003522, 1003523, 1003524, 1003525, 1003526, 1003527, 1003531, 1003532, 1003533, 1003537, 1003538, 1003539, 1003540, 1003541, 1003542, 1003543, 1003544, 1003545, 1003546, 1003547, 1003548, 1003549, 1003568, 1003570, 1003571, 1003572, 1003573, 1003577, 1003578, 1003579, 1003581, 1003586, 1003587, 1003588, 1003596, 1003597, 1003598, 1003599, 1003622, 1003635, 1003636, 1003637, 1003639, 1003640, 1003641, 1003642, 1003643, 1003644, 1003645, 1003646, 1003647, 1003648, 1003649, 1003650, 1003651, 1003652, 1003653, 1003654, 1003655, 1003656, 1003657, 1003658, 1003666, 1003667, 1003668, 1003674, 1003713, 1003715, 1003716, 1003717, 1003718, 1003723, 1003742, 1003743, 1003744, 1003745, 1003746, 1003747, 1003748, 1003749, 1003750, 1003751, 1003752, 1003753, 1003759, 1003760, 1003761, 1003762, 1003763, 1003777, 1003778, 1003779, 1003805, 1003810, 1003811, 1003812, 1003813, 1003829, 1003830, 1003831, 1003836, 1003837, 1003838, 1003839, 1003842, 1003843, 1003844, 1003845, 1003846, 1003847, 1003865, 1003868, 1003869, 1003870, 1003871, 1003872, 1003873, 1003866, 1003876, 1003877, 1003878, 1003879, 1003880, 1003889, 1003890, 1003891, 1003892, 1003894, 1003895, 1003896, 1003904, 1003909, 1003910, 1003916, 1003918, 1003919, 1003920, 1003921, 1003934, 1003941, 1003942, 1003944, 1003945, 1003946, 1003947, 1003948, 1003949, 1003950, 1003951, 1003952, 1003953, 1003958, 1003957, 1003958, 1003962, 1003963, 1003964, 1003965, 1003966, 1003975, 1003976, 1003977, 1003978, 1003980, 1003981, 1003982, 1003998, 1004003, 1004004, 1004005, 1004006, 1004007, 1004008, 1004010, 1004011, 1004012, 1004013, 1004014, 1004015, 1004017, 1004018, 1004019, 1004020, 1004021, 1004022, 1004023, 1004024, 1004025, 1004026, 1004027, 1004028, 1004029, 1004033, 1004034, 1004035, 1004038, 1004039, 1004040, 1004041, 1004042, 1004043, 1004047, 1004048, 1004049, 1004050, 1004051, 1004052, 1004053, 1004072, 1004073, 1004074, 1004075, 1004091, 1004092, 1004094, 1004095, 1004096, 1004097, 1004098, 1004106, 1004107, 1004108, 1004110, 1004113, 1004114, 1004117, 1004124, 1004125, 1004126, 1004137, 1004138, 1004139, 1004140, 1004141, 1004142, 1004143, 1004144, 1004145, 1004146, 1004147, 1004148, 1004156, 1004157, 1004158, 1004160, 1004161, 1004162, 1004163, 1004164, 1004165, 1004166, 1004167, 1004168, 1004169, 1004170, 1004171, 1004182, 1004190, 1004192, 1004193, 1004194, 1004195, 1004197, 1004198, 1004199, 1004200, 1004201, 1004202, 1004203, 1004204, 1004205, 1004250, 1004268, 1004269, 1004274, 1004275, 1004276, 1004279, 1004280, 1004282, 1004283, 1004284, 1004285, 1004286, 1004287, 1004288, 1004289, 1004292, 1004297, 1004298, 1004299, 1004327, 1004328, 1004329, 1004330, 1004331, 1004332, 1004336, 1004337, 1004338, 1004438, 1004439, 1004440, 1005000, 1005001, 1005002, 1005003, 1005004, 1005005, 1005006, 1005007, 1005008, 1005009, 1005010, 1005011, 1005012, 1005013, 1005014, 1005015, 1005016, 1005017, 1005023, 1005024, 1005025, 1005026, 1005027, 1005028, 1005029, 1005030, 1005031, 1005032, 1005033, 1005034, 1005035, 1005036);
var capes = new Array(1100004, 1101000, 1102187, 1102188, 1102199, 1102197, 1102201, 1102208, 1102211, 1102212, 1102213, 1102217, 1102218, 1102220, 1102221, 1102222, 1102232, 1102236, 1102240, 1102241, 1102242, 1102243, 1102244, 1102245, 1102246, 1102248, 1102163, 1102267, 1102270, 1102271, 1102272, 1102273, 1102274, 1102251, 1102252, 1102253, 1102257, 1102258, 1102285, 1102286, 1102287, 1102289, 1102290, 1102291, 1102292, 1102294, 1102295, 1102296, 1102297, 1102298, 1102299, 1102300, 1102307, 1102308, 1102309, 1102322, 1102323, 1102324, 1102325, 1102326, 1102334, 1102336, 1102343, 1102344, 1102346, 1102353, 1102354, 1102374, 1102375, 1102385, 1102379, 1102380, 1102386, 1102389, 1102390, 1102392, 1102394, 1102395, 1102396, 1102422, 1102423, 1102424, 1102425, 1102426, 1102427, 1102428, 1102429, 1102430, 1102431, 1102432, 1102433, 1102434, 1102435, 1102436, 1102437, 1102438, 1102450, 1102451, 1102452, 1102453, 1102454, 1102486, 1102488, 1102497, 1102506, 1102508, 1102549, 1102554, 1102556, 1102567, 1102568, 1102569, 1102570, 1102571, 1102573, 1102574, 1102590, 1102591, 1102592, 1102593, 1102604, 1102605, 1102614, 1102615, 1102613, 1102622, 1102625, 1102631, 1102641, 1102642, 1102665, 1102673, 1102674, 1102675, 1102676, 1102683, 1102685, 1102688, 1102689, 1102690, 1102691, 1102705, 1102707, 1102708, 1102716, 1102718, 1102725, 1102726, 1102747, 1102754, 1102755, 1102756, 1102760, 1102761, 1102767, 1102775, 1102778, 1102787, 1102789, 1102800, 1103000, 1103406, 1103405);
var tops = new Array(1040138, 1041138, 1041139, 1041147, 1041193, 1041194, 1041195, 1042148, 1042159, 1042160, 1042161, 1042162, 1042165, 1042166, 1042168, 1042171, 1042172, 1042173, 1042174, 1042176, 1042177, 1042180, 1042182, 1042184, 1042185, 1042186, 1042187, 1042188, 1042189, 1042190, 1042193, 1042194, 1042195, 1042196, 1042197, 1042201, 1042203, 1042204, 1042206, 1042207, 1042208, 1042209, 1042210, 1042212, 1042213, 1042214, 1042215, 1042216, 1042217, 1042218, 1042219, 1042220, 1042221, 1042222, 1042228, 1042229, 1042230, 1042231, 1042232, 1042233, 1042234, 1042235, 1042236, 1042237, 1042238, 1042239, 1042240, 1042241, 1042242, 1042243, 1042244, 1042251, 1042252, 1042254, 1042255, 1042256, 1042257, 1042258, 1042259, 1042260, 1042262, 1042263, 1042264, 1042265, 1042266, 1042267, 1042268, 1042269, 1042271, 1042276, 1042277, 1042278, 1042279, 1042280, 1042281, 1042282, 1042287, 1042288, 1042289, 1042290, 1042292, 1042293, 1042294, 1042343, 1042344);
var gloves = new Array(1082146,1082147,1082148,1082149,1082150,1082407,1082411,1082246,1082175,1082176,1082177,1082178,1082179,1082124,1082408,1082312,1082310,1082328,1082228,1082329,1082272,1082330,1082331,1082057,1082314,1082315,1082332,1082224,
1082225,1082263,1082282,1082275,1082278,1082279,1082280,1082281,1082423, 1082245, 1082232, 1082421, 1082422, 1082448, 1082493, 1082053, 1082505, 1082517, 1082471);
var overalls = new Array(1050142, 1050143, 1050146, 1050148, 1050152, 1050154, 1050157, 1050158, 1050159, 1050161, 1050167, 1050177, 1050179, 1050180, 1050209, 1050210, 1050215, 1050232, 1050234, 1050235, 1050241, 1050242, 1050243, 1050244, 1050256, 1050284, 1050285, 1050291, 1050296, 1050297, 1050298, 1050299, 1050300, 1050301, 1050302, 1050303, 1050304, 1050305, 1050306, 1050307, 1050308, 1050310, 1050311, 1050312, 1050313, 1050314, 1050315, 1050316, 1050318, 1050319, 1050322, 1050323, 1050324, 1050326, 1050327, 1050328, 1050329, 1050330, 1050331, 1050332, 1050333, 1050334, 1050335, 1050336, 1050337, 1050338, 1050339, 1050340, 1050341, 1050343, 1050346, 1050351, 1050353, 1051158, 1051159, 1051161, 1051162, 1051173, 1051174, 1051175, 1051176, 1051178, 1051179, 1051180, 1051182, 1051183, 1051185, 1051188, 1051189, 1051190, 1051192, 1051193, 1051194, 1051195, 1051199, 1051200, 1051211, 1051213, 1051218, 1051219, 1051221, 1051229, 1051231, 1051232, 1051233, 1051234, 1051252, 1051253, 1051254, 1051255, 1051262, 1051264, 1051265, 1051277, 1051282, 1051284, 1051285, 1051292, 1051294, 1051295, 1051296, 1051297, 1051298, 1051299, 1051303, 1051304, 1051305, 1051312, 1051332, 1051333, 1051349, 1051350, 1051351, 1051362, 1051366, 1051367, 1051368, 1051369, 1051370, 1051371, 1051372, 1051373, 1051374, 1051375, 1051376, 1051382, 1051383, 1051384, 1051390, 1051391, 1051392, 1051393, 1051394, 1051395, 1051396, 1051397, 1051398, 1051399, 1051400, 1051401, 1051402, 1051403, 1051404, 1051406, 1051407, 1051408, 1051409, 1051410, 1051411, 1051415, 1051420, 1051422, 1051425, 1051426, 1051429, 1052073, 1052074, 1052085, 1052086, 1052087, 1052171, 1052172, 1052173, 1052174, 1052175, 1052176, 1052179, 1052180, 1052181, 1052191, 1052192, 1052193, 1052194, 1052198, 1052199, 1052200, 1052201, 1052202, 1052203, 1052204, 1052212, 1052213, 1052217, 1052218, 1052224, 1052225, 1052232, 1052233, 1052245, 1052246, 1052247, 1052275, 1052276, 1052277, 1052278, 1052279, 1052280, 1052281, 1052329, 1052330, 1052331, 1052367, 1052368, 1052399, 1052400, 1052401, 1052402, 1052403, 1052404, 1052405, 1052407, 1052412, 1052417, 1052418, 1052419, 1052421, 1052435, 1052458, 1052459, 1052467, 1052503, 1052506, 1052507, 1052508, 1052550, 1052570, 1052571, 1052631, 1052634, 1052685, 1052686, 1052687, 1052709, 1052712, 1052724, 1052725, 1052726, 1052750, 1052751, 1052752, 1052753, 1052754, 1052756, 1052757, 1052758, 1052759, 1052760, 1052761, 1052762, 1052771, 1052772, 1052773, 1052774, 1052775, 1052776, 1052779, 1052780, 1052838, 1052839, 1052840, 1052841, 1052842, 1052843, 1052844, 1052845, 1052846, 1052847, 1052848, 1052849, 1052850, 1052862, 1052863, 1053090);
var pants = new Array(1061039,1061039,1060026,1062125,1051039,1062089,1061155,1061153,1060131,1060133,
1062147,1062145,1062139,1062133,1062134,1062135,1062136,1062137,1062138,1062131,1062130,1062129,1062126,
1062125,1062119,1062118,1062116,1062114,1062113,1062111,1062110,1062109,1062108,1062107,1062106,1062105,
1062104,1062103,1062102,1062101,1061133,1062100,1062098,1062097,1062095,1062096,1062094,1062093,1062092,
1062080,1062081,1062071,1061140,1061141,1060120,1060121,1061142, 1062123, 1062124, 1062162, 1062129, 1062039,1060182);
var rings = new Array(1112141, 1112252, 1112919, 1112918, 1112663, 1112648, 1112533, 1112585,1112586,1112550,1112551,1112116,1112226,1112118,1112228,1112553,5010078,5010079,5010080,5010082,5010081,5010083,5010031,5010032,5010023,5010013,5010005, 1112134, 1112135, 1112238, 1112142, 1112253, 1112143);
var shoes = new Array(1072634,1072629,1072533,1072534,1072450,1072451,1072452,1072453,1072450,1072432,1072431,1072430,1072429,1072428,
1072427,1072275,1072613,1072515,1072516,1072407,1072406,1072388,1072342,1072327,1072283,1072278,1072337,1072245,1072244,1072824,1072454,1072457,1072514,1072330,1072333, 1071014, 1072270, 1072385, 1072386, 1072387, 1072389, 1072393, 1072370, 1072397, 1072426, 1072438, 1072439, 1072440, 1072441, 1072443, 1072444, 1072448, 1072456, 1072482, 1072484, 1072817, 1072808, 1072529, 1072530, 1072531, 1072532, 1072543, 1072507);
var weapons = new Array(1702347,1702343,1702342,1702339,1702337,1702338,1702334,1702333,1702332,1702331,1702330,1702329,1702328,1702327,1702325,
1702326,1702323,1702324,1702322,1702321,1702320,1702319,1702318,1702317,1702316,1702315,1702314,1702313,1702309,1702308,1702307,1702304,1702305,
1702303,1702302,1702301,1702300,1702299,1702296,1702294,1702293,1702295,1702280,1702281,1702282,1702283,1702284,1702285,1702286,1702287,1702288,
1702289,1702271,1702272,1702273,1702274,1702275,1702276,1702277,1702278,1702279,1702270,1702261,1702262,1702263,1702264,1702265,1702266,1702267,
1702268,1702269,1702260,1702259,1702258,1702257,1702256,1702254,1702253,1702252,1702251,1702250,1702237,1702238,1702228,1302095,1702235,
1702098,1302092,1702049,1702029,1302094,1702233,1302024,1702106,1702219,1702215,1302131,1702207,1702208,1702102,1702100,1702209,1702203,
1702115,1702120,1322123,1702119,1702118,1322033,1322006,1332125,1332021,1332032,1402014,1332030,1372031,1402014,1442106,1442061,1372073,1402044,
1702224,1492065,1702211,1702350,1702352,1702342,1702340,1702306,1702310,1702348,1702223,1372035,1372036,1372037,1372038,1372039,1372040,1372041,1372042,1092067,1099004,1092051,1092086, 1702367, 1702368, 1702369, 1702371, 1702372, 1702373, 1702374, 1702375, 1702376, 1702377, 1702378, 1702379, 1702380, 1702381, 1702382, 1702388, 1702399, 1702390, 1702392, 1702393, 1702401, 1702402, 1702403, 1702404, 1702405, 1702406, 1702408, 1702409, 1702415, 1702417, 1702423, 1702426, 1702427, 1702428, 1702429, 1702430, 1702431, 1702432, 1702433, 1702434, 1702435, 1702436, 1702437, 1702438, 1702439, 1702446, 1702448, 1702452, 1702453, 1702455, 1702456, 1702457, 1702481, 1432118, 1332169, 1382144, 1402130, 1422090, 1452148, 1462138, 1472160, 1482121, 1492121, 1402500, 1402501, 1402502, 1402503, 1402504, 1402505, 1402506, 1402507, 1402508, 1402555);

var effects = new Array();

var allids = new Array();
allids.push(eye, face, ear, caps, capes, tops, gloves, overalls, pants, rings, shoes, weapons);

var equiptype = "";
var whatType = -1;

var ppCost = 10;

var arrayofitems = new Array();
var selected = 0;
var option = 0;

//Eye, Face, Ear, Caps, Capes, Tops, Gloves, Overalls, Pants, Rings & Effects, Shoes, Weapons & Shields
var epCost = Array(8, 9, 6, 10, 9, 10, 7, 9, 7, 10, 8, 11);
var dpCost = Array(1, 2, 1, 3, 2, 3, 1, 2, 1, 3, 1, 3);;
var payWith = 0;

var itemid = 0;
var blue = 0;
var disptype = 0;
var search = -1;
var infinity = "\t\t\t\t\t\t\t#d#eMapleInfinity#k Ioc Vendor#n\r\n";
function start() {
    status = -1;
    action(1, 0, 0);
}

function action(mode, type, selection) {
    /*if (!cm.getPlayer().isGM()){
        cm.sendOk("blocked");
        cm.dispose();
    }*/
    if (mode == -1 || selection == 1000000) {
        cm.dispose();
        return;
    } else {
        if (mode == 1) {
            status++;
        } else {
            cm.dispose();
            return;
        }
        if (status == 0) {
            cm.sendNext(infinity + "We have plenty of fun stuff that we can trade with you. These are premium items that you can buy with event points. You earn event points by playing in games with the community and winning.");
        } else if (status == 1 || selection == 10000) {
            status = 1;
            disptype = 0;
            var selStr = infinity + "Which kind of premium item would you like to see?\r\n";
            selStr += "\r\n#L17##rSearch Item#k" +
                      "\r\n#L18##rExchange Participation Points#k\r\n";
            for (var i = 0; i < equipnames.length; i++) {
                if (i == 14) {
                    selStr += "\r\n";
                }
                selStr += "\r\n#L" + i + "##b" + equipnames[i] + "#k #d(" + epCost[i] + " EP";
                if (cm.getPlayer().getDonationpoints() > 0)
                    selStr += " or " + dpCost[i] + " DP";
                selStr += ")#k#l";
            }
            cm.sendSimple(selStr);
        } else if (status == 2 || selection == 10001) {
            status = 2;
            if (selection < 14) {
                blue = 1;
                equiptype = equipnames[selection];
                whatType = selection;
                switch (selection) {
                    case 0:
                        arrayofitems = eye; 
                        break;
                    case 1:
                        arrayofitems = face; 
                        break;
                    case 2:
                        arrayofitems = ear; 
                        break;
                    case 3:
                        arrayofitems = caps; 
                        break;
                    case 4:
                        arrayofitems = capes; 
                        break;
                    case 5:
                        arrayofitems = tops; 
                        break;
                    case 6:
                        arrayofitems = gloves; 
                        break;
                    case 7:
                        arrayofitems = overalls; 
                        break;
                    case 8:
                        arrayofitems = pants; 
                        break;
                    case 9:
                        arrayofitems = rings; 
                        break;
                    case 10:
                        arrayofitems = shoes; 
                        break;
                    case 11:
                        arrayofitems = weapons; 
                        break;  
                    case 12:
                        arrayofitems = effects; 
                        break;
                }
            }
            if ((selection < 14 && disptype == 0) || selection == 10001) {
                var selections = Math.floor((arrayofitems.length - 1)/ pagemax) + 1;

                var selStr2 = infinity + "#eSelect which page of " + equiptype + " you wish to view.#n\r\nThere are exactly " + arrayofitems.length + " items to choose from.\r\n";
                for (var i2 = 1; i2 <= selections; i2++) {
                    selStr2 += "\r\n#b#L" + i2 + "# " + equiptype + " Page " + i2 + "#l";
                }
                selStr2 += "\r\n\r\n#L10000##rGo back to start page#k#l";
                cm.sendSimple(selStr2);
            } else if (selection == 15) {
                search = 1;
                blue = 2;
                equiptype = "";
                status = 299;
                cm.sendGetText(infinity + "You can search for item ID's by looking them up, or asking someone else for the ItemID.\r\n\r\n#ePlease enter the itemid of the item you want below.#n");
                return;
            } else if (selection == 16) {
                search = 2;
                blue = 2;
                equiptype = "";
                status = 299;
                cm.sendGetText(infinity + "#ePlease enter the item name you want below, make sure you enter the name correctly (capital letters count).#n");
                return;
            } else if (selection == 17) {
                status = 1;
                cm.sendSimple(infinity + "How would you like to search the desired item?#b"
                            + "\r\n#L15#Search by ID#l"
                            + "\r\n#L16#Search by name#l");
                           // + "\r\n#L19#Search by image#l");
            } else if (selection == 18) {
                status = 332;
                var cost = parseInt(cm.getPlayer().getParticipationPoints()/ppCost);
                cm.sendSimple(infinity + "You have #b" + cm.getPlayer().getParticipationPoints() + " PP (Participation Points)#k\r\nIt costs #b" + ppCost + " PP#k to buy #b1 EP#k, what would you like to do?" 
                            + "\r\n#L1##bExchange it all#k #r(" + cost + " EP)#k"
                            + "\r\n#L2##bExchange " + ppCost + " PP only#k #r(1 EP)#k");
            } else if (selection == 19) {
                status = 1;
                disptype = 1;
                var selStr = infinity + "Which kind of premium item would you like to see?\r\n";
                for (var i = 0; i < equipnames.length; i++) {
                    if (i == 14) {
                        selStr += "\r\n";
                    }
                    selStr += "\r\n#L" + i + "##b" + equipnames[i] + "#k#l";
                }
                cm.sendSimple(selStr);
            } else if (selection < 14 && disptype == 1) {
                status = 300;
                var selStr2 = infinity + "There are exactly " + arrayofitems.length + " items to choose from.\r\n";
                for (var i2 = 0; i2 <= (arrayofitems.length - 1); i2++) {
                    selStr2 += "#L" + i2 + "##v" + arrayofitems[i2] + "#" + ((i2+1)%6 == 0 ? "\r\n" : "");
                }
                selStr2 += "\r\n\r\n#L10000##rGo back to start page#k#l";
                cm.sendSimple(selStr2);
            } else {
                status = 99;
                cm.dispose();
                cm.sendOk(infinity + "This function is arriving shortly.");
            }
        } else if (status == 3 || selection == 10002 || selection == 10003 || selection == 10005) {
            status = 3;
            if (selection == 10002) {
                selected++;
            } else if (selection == 10005) {
                selected--;
            } else if (selection != 10003) {
                selected = selection - 1;
            }
            var selStr3 =infinity +  "#ePlease select an item to purchase (" + equiptype + " Page " + (selected + 1) + ")#n";
            for (var i3 = selected * pagemax; i3 < (selected * pagemax) + pagemax && i3 < arrayofitems.length; i3++) {
                selStr3 += "\r\n\r\n#L" + i3 + "##v" + arrayofitems[i3] + "# - #b#t" + arrayofitems[i3] + "##k";
                selStr3 += "#l";
            }
            if ((selected + 1) != (Math.floor((arrayofitems.length - 1)/ pagemax) + 1)) {
                selStr3 += "\r\n\r\n#L10002##rSee next page#k#l";
            }
            if (selected > 0) {
                selStr3 += "\r\n#L10005##rSee previous page#k#l";
            }
            selStr3 += "\r\n\r\n#L10000##rGo back to start page#k#l";
            cm.sendSimple(selStr3);
        } else if (status == 4) {
            itemid = arrayofitems[selection];
            var text = infinity + "#eYou have chosen the following item:#n\r\n#b#t" + itemid + "##k (#v" + itemid + "#)\r\n\r\nNow please choose the type of the payment you wish to use..."
                + "\r\n#L1##bBuy with#k - #r" + epCost[whatType] + " Event Points#k#l";
            if (cm.getPlayer().getDonationpoints() > 0)
                text += "\r\n#L2##bBuy with#k - #r" + dpCost[whatType] + " Donation Points#k#l"
            cm.sendSimple(text);
        } else if (status == 5) {
            option = selection;
            payWith = option;
            if (option >= 0 && option < 10000) {
            cm.sendYesNo(infinity + "So are you sure you wish to order the following...\r\n\r\n"
                + "#eItem:#n #t" + itemid + "# (#v" + itemid + "#)\r\n"
                + "#eWeapon Cost:#n #b" + (payWith == 1 ? epCost[whatType] + " Event Points" : dpCost[whatType] + " Donation Points") + ".");
            } else if (option == 10000) {
                status = 0;
            }
        } else if (status == 6) {
            if (checkSpots()) {
                var selStr4 =infinity +  "#eDo you wish to shop again?#n\r\n\r\n#b#L10000#Yes, from the start page.#l";
                if (blue == 1) {
                    selStr4 += "\r\n#L10001#Yes, from the " + equiptype + " Selection of Pages#l\r\n#L10003#Yes, from the page I was just on.#l";
                }
                selStr4 += "\r\n#L1000000#No thanks.#l";
                switch (payWith) {
                    case 1:
                        if(cm.getClient().getPlayer().getEventpoints() >= epCost[whatType]) {
                            cm.getClient().getPlayer().addEventpoints(-epCost[whatType]);
                            
                            cm.gainItem(itemid, 1); 
                            //cm.getPlayer().sendGMMessage("[COCO] " + cm.getPlayer().getName() + " has just bought a '" + itemid + "' for " + epCost[whatType] + " EP");
                            cm.sendSimple(selStr4);
                        } else {
                            cm.sendOk("You don't have #b" + epCost[whatType] + " Event Points#k.");
                            cm.dispose();
                        }
                        break;
                    case 2:
                        if (cm.getPlayer().getDonationpoints() >= dpCost[whatType]) {
                            cm.getPlayer().gainDonationpoints(-dpCost[whatType]);
                            cm.gainItem(itemid, 1); 
                            //cm.getPlayer().sendGMMessage("[COCO] " + cm.getPlayer().getName() + " has just bought a '" + itemid + "' for " + dpCost[whatType] + " DP");
                            cm.sendSimple(selStr4);
                        } else {
                            cm.sendOk("You don't have #b" + dpCost[whatType] + " Donation Points#k.");
                            cm.dispose();
                        }
                        break;
                }
               /* if (cm.itemTypeAmount("Item of Choice") >= 10) {
                    cm.getPlayer().giftMedal(1142763, "10 IOCs", 10);
                } */
            } else {
                cm.sendOk("You do not have enough inventory space for #b#t" + itemid + "##k.");
                cm.dispose();
            }
        } else if (status == 200) {
            var allitems = cm.searchItemResulats(cm.getText());
            var allitemsarrayed = allitems.toArray();
            var troxiedmadethis = infinity + "I have found " + allitemsarrayed.length + " results for the search '" + cm.getText() + "'\r\n";
            for (var i4 = 0; i4 < allitemsarrayed.length; i4++)
                troxiedmadethis += "\r\n#L"+i+"##t" + allitemsarrayed[i4] + "\r\n";
            cm.sendSimple(troxiedmadethis);
        } else if (status == 300) {
            status = 4;
            itemid = (search == 1 ? Math.round(cm.getText()) : cm.getItemIdByName(cm.getText()));
            var text1 = infinity + "The item you are searching for does not exist, we strongly recommend you suggest the item to be added - on the forums.\r\n#L10000#Ok.";
            for (var i9=0; i9<allids.length; i9++) {
                for (var j9=0; j9<allids[i9].length; j9++) {
                    if (allids[i9][j9] == itemid) {
                        whatType = i9;
                        text1 = infinity + "#eYou have chosen the following item:#n\r\n#b#t" + itemid + "##k (#v" + itemid + "#)\r\n"
                              + "\r\n#L1##bBuy with#k - #r" + epCost[whatType] + " Event Points#k#l";
                            if (cm.getPlayer().getDonationpoints() > 0)
                                text1 += "\r\n#L2##bBuy with#k - #r" + dpCost[whatType] + " Donation Points#k#l";
                            text1 += "\r\n\r\n#L10000##dNo, go back to the start page#k";
                    }
                }
            }
            cm.sendSimple(text1);
        } else if (status == 301) {
            status = 4;
            itemid = arrayofitems[selection];
            text1 = infinity + "#eYou have chosen the following item:#n\r\n#b#t" + itemid + "##k (#v" + itemid + "#)\r\n"
                + "\r\n#L1##bBuy with#k - #r" + epCost[whatType] + " Event Points#k#l";
                if (cm.getPlayer().getDonationpoints() > 0)
                    text1 += "\r\n#L2##bBuy with#k - #r" + dpCost[whatType] + " Donation Points#k#l"
                text1 += "\r\n\r\n#L10000##dNo, go back to the start page#k";
            cm.sendSimple(text1);
        } else if (status == 333) {
            if (cm.getPlayer().getParticipationPoints() >= ppCost) {
                if (selection == 1) {
                    var cost = parseInt(cm.getPlayer().getParticipationPoints()/ppCost);
                    cm.getPlayer().gainParticipationPoints(-(cost*ppCost));
                    cm.getClient().getPlayer().addEventpoints(cost);
                    cm.getPlayer().message("You have gained Event Points (+" + cost + ")");
                    cm.sendOk(infinity + "Have a good day!");
                    cm.dispose();
                } else if (selection == 2) {
                    cm.getPlayer().gainParticipationPoints(-ppCost);
                    cm.getClient().getPlayer().addEventpoints(1);
                    cm.getPlayer().message("You have gained Event Points (+1)");
                    cm.sendOk(infinity + "Have a good day!");
                    cm.dispose();
                }
            } else {
                cm.sendOk(infinity + "You don't have enough Participation Points.");
                cm.dispose();
            }   
        } else if (status == 7) {
            cm.voteMSG();
        } else if (status == 201) {
            var oppurtunity = selection;
            cm.sendSimple(infinity + "#eYou have chosen the following item:#n\r\n#b#t" + oppurtunity + "##k (#v" + oppurtunity + "#)\r\n\r\nDo you want to randomize stats for this item?\r\n"
                + "\r\n#L10001##Nah, I'm good. Just give me the item!");
        } else if (selection == 10000) {
            if (cm.haveItem(4000038, 1)) {
                cm.gainItem(cm.getPlayer().itemsearched, 1);
                cm.sendOk(infinity + "Awesome! Have fun!");
            } else {
                cm.sendOk(infinity + "PENIS!");
            }
        } else if (selection == 10001) {
            cm.gainItem(allitemsarrayed[selection], 1);
            cm.sendOk(infinity + "Awesome! Have fun!");
        } else {
            cm.sendOk(infinity + "Cya then!");
        }
    }
}


function getWeaponAttack(equip) {
    var ii = MapleItemInformationProvider.getInstance();
    ii.getWatkForProjectile(equip);
}

function getEquipStat(i) {
    switch (i) {
        case 0:
            return equip.getStr();
        case 1:
            return equip.getDex();
        case 2:
            return equip.getInt();
        case 3:
            return equip.getLuk();
        case 4:
            return equip.getHp();
        case 5:
            return equip.getMp();
        case 6:
            return equip.getWatk();
        case 7:
            return equip.getMatk();
        case 8:
            return equip.getWdef();
        case 9:
            return equip.getMdef();
        case 10:
            return equip.getAcc();
        case 11:
            return equip.getAvoid();
        case 12:
            return equip.getSpeed();
        case 13:
            return equip.getJump();
        case 14:
            return equip.getUpgradeSlots();
    }
}

function checkSpots() { 
    if(cm.getPlayer().getInventory(Packages.client.inventory.MapleInventoryType.getByType(1)).getNextFreeSlot() < 1){ 
        return false; 
    } 
    return true; 
} 

function makeIoc(itemid) {
    var ii = MapleItemInformationProvider.getInstance();
    var item = ii.getEquipById(itemid);
    MapleInventoryManipulator.addFromDrop(cm.getClient(), ii.customItem(item, "", "Item of Choice"));
}