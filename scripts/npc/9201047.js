/*
	This file is part of the OdinMS Maple Story Server
    Copyright (C) 2008 Patrick Huy <patrick.huy@frz.cc>
		       Matthias Butz <matze@odinms.de>
		       Jan Christian Meyer <vimes@odinms.de>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as
    published by the Free Software Foundation version 3 as published by
    the Free Software Foundation. You may not use, modify or distribute
    this program under any other version of the GNU Affero General Public
    License.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
/* @Author Jvlaple */

hats =  [1000061, 1000062, 1000079, 1000081, 1000082, 1000083, 1000085, 1000086, 1000095,
1000992, 1001066, 1001067, 1001070, 1001071, 1001084, 1001085, 1001088, 1001089,
1001090, 1002842, 1002843, 1002845, 1002846, 1002854, 1002892, 1002893, 1002894, 1002936, 1002982, 1003010, 1003053, 1003054, 1003070, 1003071, 1003072, 1003074, 1003078, 1003079, 1003080, 1003081, 1003082, 1003083, 1003092, 1003093, 1003096, 1003101, 1003103, 1003119, 1003120, 1003121, 1003122, 1003123, 1003125, 1003126, 1003127, 1003128,
1003129, 1003130, 1003131, 1003132, 1003233, 1003135, 1003146, 1003148, 1003149, 
1003182, 1003185, 1003186, 1003187, 1003203, 1003207, 1003208, 1003210, 1003220,
1003221, 1003222, 1003238, 1003237, 1003246, 1003247, 1003249, 1003250, 1003251, 1003252, 1003264, 1003369, 1003387, 1003393, 1003390, 1003391, 1003459,
1003462, 1003500, 1003501, 1003502, 1003518, 1003531, 1003532, 1003541, 1003559, 1003560, 1003581, 1003588, 1003639, 1003640, 1003641, 1003642, 1003649, 1003746, 1003747, 1003750, 1003751, 1003853, 1003855, 1003904, 1003906, 1003907, 1003910, 
1003921, 1003934, 1003935, 1003941, 1003942, 1003944, 1003945, 1003948, 
1003957, 1003958, 1003965, 1003967, 1003975, 1003989, 1003990, 1004000, 
1004003, 1004004, 1004015, 1004016, 1004017, 1004018, 1004025, 1004026, 1004027, 1004028, 1004029, 1004033, 1004048, 1004081, 1004090, 1004091, 1004092, 1004094, 
1004106, 1004108, 1004110, 1004113, 1004118, 1004124, 1004125, 1004126, 
1004156, 1004157, 1004158, 1004162, 1004163, 1004164, 1004182, 1004190, 1004191, 1004192, 1004193, 1004198, 1004199, 1004200, 1004201, 1004202, 1004203, 1004204, 1004205, 1004207, 1004208, 1004209, 1004211, 1004212, 1004213, 1004244, 1004245, 1004246, 1004247, 1004248, 1004249, 1004250, 1004269, 1004276, 1004282, 1004283, 1004284, 1004285, 1004298, 1004299, 1004450, 1004458, 1004459, 1004460, 1004461, 1004462, 1004463, 1004467, 1004468, 1004470, 1004471, 1004472, 1004473, 1004480, 1004481, 1004482, 1004503, 1004510, 1004511, 1004512, 1004513, 
1004530, 1004543, 1004544, 1004545, 1004546, 1004547, 1004548, 1004459, 1004560,
1004564, 1004565, 1004566, 1004568, 1004597, 1004599, 1004600, 1004601, 1004602, 
1004635, 1004636, 1004717, 1004720, 1004721, 1004722, 1004723, 1004724, 1004725,
1004727, 1004726, 1004728, 1004729, 1004730, 1004731, 1004732, 1004733, 1004757,
1004774, 1004775, 1004776, 1004794, 1004795, 1004796, 1004797, 1004798, 1004799, 
1004800, 1004801, 1004802, 1004803, 1004814, 1004815, 1004816, 1004842, 1004843,
1004847, 1004854, 1004855, 1004927, 1004928, 1004929, 1004931, 1004948, 1004954, 1004955, 1004956, 1005001, 1005002, 1005003, 1005004, 1005005, 1005006, 1005007, 1005008, 1005009, 1005010, 1005032, 1005033, 1005034, 1005035, 1005036, 1005039 ,
1005040, 1005041, 1005042, 1005043, 1005106, 1005107, 1005108, 1005110, 1005110, 1005111, 1005112, 1005113, 1005115, 1005119, 1005126, 1006006, 1006007, 1006008, 1008535, 1008536, 1008537, 1008538, 1008539, 1008541, 1008542, 1008547, 1008548, 1008556, 1008557, 1008558, 1008559, 1008566, 1008567, 1008568, 1008569, 1008570, 1008571, 1008572, 1008573, 1008574, 1008575, 1008576, 1008577,
1008578, 1008579, 1008580, 1008582, 1008583, 1008584, 1008585, 1008586, 1008587, 1008588, 1008589, 1008590, 1008592, 1008593, 1008594];
nonhats = [1000039, 1000040, 1002436, 1002541, 1002554, 1002563, 1002564, 1002800, 1002814, 1002815, 1002816, 1002817, 1002864, 1002865, 1002866, 1002868, 1002880, 1002881, 1003027, 1003028, 1003073, 1003115, 1003116, 1003117, 1003118, 1003119, 1003134, 1003160, 1003219, 1003242, 1003243, 1003359, 1003360, 1003409, 1003414, 1003434, 1003527, 1003529, 1003550, 1003554, 1003555, 1003556, 1003557, 1003568, 1003570, 1003571, 1003572, 1003573, 1003574, 1003575, 1003577, 1003578, 1003579, 1003580, 1003621, 1003622, 1003624, 1003635, 1003644, 1003645, 1003646, 1003647, 1003715, 1003716, 1003717, 1003718, 1003734, 1003752, 1003753, 1003754, 1003755, 1003766, 1003767, 1003769, 1003783, 1003797, 1003798, 1003799, 1003800, 1003801, 1001059, 1002986, 1002988, 1003042, 1003040, 1003041, 1003073, 1003440, 1003441, 1003442, 1003922, 1003923, 1003924, 1003947, 1003978, 
1003999, 1004049, 1004051, 1004052, 1004053, 1004054, 1004096, 1004097, 1004098, 1004135, 1008018, 1008019, 1008532, 1008533, 1008534, 
1002895, 1002896, 1002897, 1002898, 1002899, 1002900, 1002901, 1002902, 1008581];
tops = [1042193, 1042194, 1042195, 1042196, 1042197, 1042198, 1042199, 1042200, 1042201, 1042202, 1042203, 1042204, 1042206, 1042208, 1042209, 1042210, 1042212, 1042213, 1042214, 1042215, 1042216, 1042217, 1042218, 1042219, 1042230, 1042261, 1042267, 1042270, 1042271, 1042276, 1042277, 1042278, 1042279, 1042280, 1042281, 1042282, 
1042292, 1042293, 1042294, 1042311, 1042312, 1042313, 1042314, 1042315, 1042316, 1042319, 1042320, 1042321, 1042322, 1042323, 1042324, 1042325, 1042326, 1042327, 1042328, 1042329, 1042332, 1042333, 1042334, 1042335, 1042336, 1042337, 1042338, 1042339, 1042340, 1042342, 1042343, 1042344, 1042345, 1042346, 1042347, 1042348, 1042349, 1042340, 1042354, 1042355, 1042356, 1042357, 1042358, 1042360, 1042361];
nontops = [1042180, 1042243, 1045000, 1045002, 1045003, 1045004, 1045010,  1045013, 1045014, 1045015, 1045016, 1045017, 1045018, 1045019, 1045025, 1045026, 1045027, 1045028, 1045029, 1045030, 1045031, 1045035, 1045038, 1045039, 1045040, 1045041, 1045042, 1045043, 1045044, 1045054, 1045056, 1045057, 1045058, 1045059, 1045061, 1045062, 1045063];
shoes = [1072389, 1072426, 1072438, 1072448, 1072482, 1072484, 1072495, 1072515, 1072517, 
1072530, 1072531, 1072647, 1072648, 1072649, 1072650, 1072651, 1072652, 1072857, 1072858, 1072866, 1072867, 1072875, 1072873, 1072934, 1072951, 1073009, 1073008,
1073010, 1073013, 1073014, 1073021, 1073090, 1073091, 1073092, 1073128, 1073127, 
1073150, 1073169, 1073181, 1073182, 1073186, 1079996, 1079999, 1073201];
nonshoes = [1072450, 1072451, 1072452, 1072453, 1072455, 1072533, 1072534, 1072829, 1072427, 1072428,1072429,1072430,1072431,1072432];
gloves = [1082448, 1082471, 1082495, 1082502, 1082503, 1082505, 1082519, 1082542, 1082542, 1082548, 1082549, 1082550, 1082551, 1082552, 1082588, 1082592, 1082619, 1082620, 
1082689,1082684, 1082693, 1082700, 1082703, 1082713, 1082714];
nongloves = [1082245, 1082256, 1082557, 1082258, 1082259, 1082260, 1082264, 1082278, 1082279, 1082280, 1082281, 1082392, 1082393, 1082533, 1082660, 1082661];
pants = [1062112, 1062151, 1062171, 1062172, 1062173, 1062189, 1062204, 1062214, 1062216,
1062226, 1062221, 1062222, 1062209, 1062211, 1062213, 1062154, 1062155, 1062118];
nonpants = [1060138, 1061160, 1062148, 1068000, 1068002, 1068004, 1068011, 1068012];
weapons = [1702684, 1702685, 1702695, 1702118, 1702119, 1702120, 1703997, 1702998, 1702761,1702756, 1702749, 1702747, 1702746, 1702744, 1702734, 1702731, 1702725, 1702724, 1702723, 1702722, 1702720, 1702719, 1702718, 1702714, 1702713, 1702712, 1702711, 1702710, 1702709, 1702700, 1702699, 1702698, 1702697, 1702696, 1702694, 1702693, 1702692, 1702690, 1702686, 1702682, 1702675, 1702671, 1702669, 1702668, 1702659, 1702655, 1702656, 1702657, 1702654, 1702653, 1702651, 1702649, 1702647, 1702645, 1702643, 1702641, 1702640, 1702639, 1702638, 1702637, 1702636, 1702634, 1702633, 1702632, 1702631, 1702630, 1702629, 1702628, 1702627, 1702626, 1702625, 1702624, 1702623, 1702622, 1702620, 1702618, 1702617, 1702616, 1702615, 1702614, 1702613, 1702611, 1702609, 1702608, 1702607, 1702606, 1702605, 1702604, 1702603, 1702602, 1702601, 1702600, 1702599, 1702598, 1702597, 1702595, 1702594, 1702593, 1702592, 1702591, 1702590, 1702589, 1702588, 1702587, 1702586, 1702585, 1702584, 1702583, 1702582, 1702581, 1702579, 1702578, 1702577, 1702576, 1702575, 1702574, 1702573, 1702572, 1702571, 1702570, 1702569, 1702568, 1702567, 1702566, 1702565, 1702564, 1702563, 1702561, 1702560, 1702559, 1702558, 1702557, 1702556, 1702555, 1702554, 1702553, 1702552, 1702551, 1702550, 1702549, 1702548, 1702547, 1702546, 1702545, 1702544, 1702542, 1702541, 1702538, 1702540, 1702537, 1702535, 1702534, 1702533, 1702532, 1702531, 1702530, 1702529, 1702528, 1702527, 1702526, 1702525, 1702524, 1702523, 1702521, 1702520, 1702519, 1702517, 1702516, 1702515, 1702514, 1702513, 1702512, 1702510, 1702509, 1702508, 1702507, 1702506, 1702505, 1702504, 1702503, 1702502, 1702501, 1702500, 1702499, 1702498, 1702497, 1702496, 1702495, 1702494, 1702493, 1702492, 1702491, 1702490, 1702489, 1702488, 1702487, 1702486, 1702485, 1702484, 1702483, 1702482, 1702481, 1702480, 1702479, 1702478, 1702477, 1702476, 1702473, 1702472, 1702471, 1702470, 1702469, 1702468, 1702467, 1702466, 1702465, 1702464, 1702463, 1702462, 1702461, 1702460, 1702459, 1702458, 1702457, 1702456, 1702455, 1702454, 1702453, 1702452, 1702451, 1702450, 1702449, 1702448, 1702447, 1702446, 1702445, 1702444, 1702443, 1702442, 1702440, 1702437, 1702436, 1702435, 1702434, 1702433, 1702432, 1702431, 1702426, 1702425, 1702424, 1702423, 1702422, 1702421, 1702420, 1702419, 1702418, 1702417, 1702416, 1702415, 1702414, 1702413, 1702412, 1702411, 1702410, 1702409, 1702408, 1702406, 1702405, 1702404, 1702403, 1702402, 1702401, 1702400, 1702399, 1702398, 1702397, 1702395, 1702394, 1702393, 1702392, 1702390, 1702389, 1702388, 1702387, 1702386, 1702385, 1702382, 1702381, 1702380, 1702379, 1702378, 1702377, 1702376, 1702375, 1702374, 1702373, 1702372, 1702371, 1702370, 1702369, 1702368, 1702367, 1702366, 1702365, 1702364, 1702363, 1702362, 1702361, 1702360, 1702359, 1702358, 1702357, 1702356, 1702355, 1702352, 1702351, 1702350, 1702345, 1702344, 1702349, 1702348, 1702347, 1702346, 1702343, 1702342, 1702341, 1702340, 1702339, 1702337, 1702336, 1702335, 1702334, 1702333, 1702332, 1702331, 1702330, 1702329, 1702328, 1702327, 1702326, 1702325, 1702324, 1702311, 1702310, 1702309, 1702308, 1702307, 1702306, 1702305, 1702304, 1702303, 1702302, 1702301, 1702300, 1702299, 1702298, 1702297, 1702296, 1702295, 1702294, 1702293, 1702289, 1702288, 1702287, 1702286, 1702285, 1702284, 1702283, 1702282, 1702281, 1702280, 1702279, 1702278, 1702277, 1702276, 1702275, 1702274, 1702273, 1702272, 1702271, 1702270, 1702269, 1702268, 1702267, 1702266, 1702265, 1702264,
1702263, 1702262, 1702261, 1702260, 1702254, 1702253, 1702249, 1702240, 1702239, 1702235];
nonweapons = [1302104, 1302216, 1302229, 1302276, 1302275, 1302292, 1302918, 1303000, 1303001, 1303004, 1303006,
 1303008, 1303009, 1303011, 1303012, 1303013, 1303799,
 1303998, 1302103, 1302226, 1302299, 1302305, 1322064,
 1322063, 1332185, 1332195, 1402153, 1332276, 1402063,
 1402184, 1402214, 1422156, 1432182, 1472230, 1482183, 1482250];
customweapons = [1302917, 1302962, 1302963, 1302970, 1302971, 1302973, 1302975, 1302992, 1302997, 1303002, 1303003, 1303005, 1303007, 1303070, 1303995, 1303996, 1303999, 1442297, 1442298, 1442299, 1442995, 1442996, 1442997, 1442998, 1442999, 1302055,
1302577, 1302578, 1302579, 1302580, 1302581,
1322255, 1322256, 1322257, 1322258, 1322259];




var status = 0;
var cat = 0;
var counter = 0;

function start() {
    action(1,0,0);
}
function action(m,t,s){
	if(status == 0){
		
	var talkstart = "Welcome to the temporary IOC Vendor, Please pick a category! \b\r\n#L0#Hats\r\n#L1#Non-Nx Hats\r\n#L2#Tops\r\n#L3#Non-Nx Tops\r\n#L4#Shoes\r\n#L5#Non-Nx Shoes\r\n#L6#Gloves\r\n#L7#Non-Nx Gloves\r\n#L8#Pants\r\n#L9#Non-Nx Pants\r\n#L10#Weapons\r\n#L11#Non-Nx Weapons\r\n#L12#Custom Weapons";		
	cm.sendSimple(talkstart);
	//cm.dispose();
	status++;
	}
	else if(status == 1){
		if(m < 1)
			cm.dispose();
		else{
		var talk = "Pick out of the following items! \r\n";	
		if(s == 0){
			cat = s;
		 for(var i=0; i < hats.length;i++)			
			talk+= "#L"+i+"##i"+hats[i]+"#"; 
		
        }else if(s == 1){
			cat = s;
			 for(var i=0; i < nonhats.length;i++)			
			talk+= "#L"+i+"##i"+nonhats[i]+"#"; 
		}else if(s == 2){
			cat = s;
			 for(var i=0; i < tops.length;i++)			
			talk+= "#L"+i+"##i"+tops[i]+"#"; 
		} else if(s == 3){
			cat = s;
			 for(var i=0; i < nontops.length;i++)			
			talk+= "#L"+i+"##i"+nontops[i]+"#"; 
       	} else if(s == 4){
			cat = s;
			 for(var i=0; i < shoes.length;i++)			
			talk+= "#L"+i+"##i"+shoes[i]+"#"; 
       	} else if(s == 5){
			cat = s;
			 for(var i=0; i < nonshoes.length;i++)			
			talk+= "#L"+i+"##i"+nonshoes[i]+"#"; 
       	} else if(s == 6){
			cat = s;
			 for(var i=0; i < gloves.length;i++)			
			talk+= "#L"+i+"##i"+gloves[i]+"#"; 
       	} else if(s == 7){
			cat = s;
			 for(var i=0; i < nongloves.length;i++)			
			talk+= "#L"+i+"##i"+nongloves[i]+"#"; 
       	} else if(s == 8){
			cat = s;
			 for(var i=0; i < pants.length;i++)			
			talk+= "#L"+i+"##i"+pants[i]+"#"; 
       	} else if(s == 9){
			cat = s;
			 for(var i=0; i < nonpants.length;i++)			
			talk+= "#L"+i+"##i"+nonpants[i]+"#"; 
       	} else if(s == 10){
			cat = s;
			 for(var i=0; i < weapons.length;i++)			
			talk+= "#L"+i+"##i"+weapons[i]+"#"; 
		//talk+= weapons[279];
       	} else if(s == 11){
			cat = s;
			 for(var i=0; i < nonweapons.length;i++)			
			talk+= "#L"+i+"##i"+nonweapons[i]+"#"; 
       	} else if(s == 12){
			cat = s;
			 for(var i=0; i < customweapons.length;i++)			
			talk+= "#L"+i+"##i"+customweapons[i]+"#"; 
       	}		
	
	  cm.sendSimple(talk);
	
		
		if(m < 1)
			cm.dispose();
		else
			status++;
		}
		
	}
	else if(status == 2){ 	
        if(m < 1)
			cm.dispose();
		else{
			
	 /*   cm.sendOk("Heres your selection +" + s);
		cm.dispose(); */
		if(cm.haveSpace()){			
		switch(cat){
			case 0:
			cm.gainItem(hats[s]);
		cm.showItemsgained(hats[s],1);
			 break;
			 case 1:
			 cm.gainItem(nonhats[s]);
		cm.showItemsgained(nonhats[s],1);
			 break;
			 case 2:
			 cm.gainItem(tops[s]);
		cm.showItemsgained(tops[s],1);
			 break;
			 case 3:
			 cm.gainItem(nontops[s]);
		cm.showItemsgained(nontops[s],1);
			 break;
			  case 4:
			 cm.gainItem(shoes[s]);
		cm.showItemsgained(shoes[s],1);
			 break;
			  case 5:
			 cm.gainItem(nonshoes[s]);
		cm.showItemsgained(nonshoes[s],1);
			 break;
			  case 6:
			 cm.gainItem(gloves[s]);
		cm.showItemsgained(gloves[s],1);
			 break;
			  case 7:
			 cm.gainItem(nongloves[s]);
		cm.showItemsgained(nongloves[s],1);
			 break;
			  case 8:
			 cm.gainItem(pants[s]);
		cm.showItemsgained(pants[s],1);
			 break;
			  case 9:
			 cm.gainItem(nonpants[s]);
		cm.showItemsgained(nonpants[s],1);
			 break;
			  case 10:
			 cm.gainItem(weapons[s]);
		cm.showItemsgained(weapons[s],1);
			 break;
			  case 11:
			 cm.gainItem(nonweapons[s]);
		cm.showItemsgained(nonweapons[s],1);
			 break;
			  case 12:
			 cm.gainItem(customweapons[s]);
		cm.showItemsgained(customweapons[s],1);
			 break;
		}
	    
	   }
        else
          cm.getClient().getPlayer().dropMessage(5,"Error. Please check if you have empty space in your inventory before trying again.");
          cm.dispose();
		}		  
	}
}